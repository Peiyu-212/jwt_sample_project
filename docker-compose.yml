version: "3.6"
services:
  app:
    restart: unless-stopped
    container_name: ${DOCKER_APP_CONTAINER}
    build:
      context: .
      dockerfile: ./deploy/dockerfile.app
      args:
        - ENV=.env
    env_file: ./.env
    depends_on:
      - db
    expose:
      - ${DOCKER_UWSGI_INTERNAL_PORT}
    volumes:
      - type: volume
        source: log
        target: /log
        volume:
          nocopy: false
    networks:
      - internal

  web:
    restart: always
    build:
      context: .
      dockerfile: ./deploy/dockerfile.web
      args:
        - ENV=.env
    container_name: ${DOCKER_WEB_CONTAINER}
    ports:
      - "${DEPLOY_WEB_PORT}:80"
    volumes:
      - ./deploy/nginx.conf:/nginx.conf.template
    environment:
      NGINX_PORT: ${DEPLOY_WEB_PORT}
      NGINX_PROJECT: ${DOCKER_APP_CONTAINER}
      NGINX_UWSGI_INTERNAL_PORT: ${DOCKER_UWSGI_INTERNAL_PORT}
    depends_on:
      - app
    links:
      - app
    networks:
      - internal
  db:
    image: postgres:12
    restart: always
    container_name: ${DOCKER_DB_CONTAINER}
    networks:
      - internal
    volumes:
      - ./db/postgresql:/var/lib/postgresql/data/
    ports:
      - "7777:5432"
    environment:
      POSTGRES_USER: ${DOCKER_DB_USER}
      POSTGRES_PASSWORD: ${DOCKER_DB_PASSWORD}
      POSTGRES_DB: ${DOCKER_DB_DATABASE}
    env_file: ./.env
    
networks:
  internal:
    name: jwt_sample

volumes:
  staticfiles:
  log:
